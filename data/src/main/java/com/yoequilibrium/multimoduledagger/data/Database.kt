package com.yoequilibrium.multimoduledagger.data

import android.content.Context
import com.yoequilibrium.multimoduledagger.core.FileManager

/**
 * Created by yo on 25.07.2024
 * (с) Рождественская В., 2024
 *  ООО "Технологии и Сервис" (ТД Впрок)
 *
 *  Компонент создает Database и в качестве контекста передает ему объект App. Т.е. объект Database из модуля data использует объект App из модуля app.
 * Но ведь зависимость между этими модулями прописана в другую сторону. Это классы из модуля app видят и могут использовать классы из модуля data, но не наоборот...
 *
 * На самом деле Database не знает и не использует класс App из модуля app. Он использует класс Context. Это класс из системной библиотеки, и его знают все Android модули в проекте. Поэтому все в порядке, никакие зависимости не нарушены.
 * Секрет в том, что Database думает, что использует объект Context, и даже не подозревает, что на самом деле использует объект App из модуля app.
 *
 * Тут важно отличать объект от класса. Database не может использовать класс App, но может получить объект App, замаскированный под Context. Другое дело, что этот объект App будет ограничен рамками Context. У Database не получится привести его к классу App, и получить от него, например, App компонент. Потому что Database не знает класс App, как впрочем и класс AppComponent. Эта маскировка является важной частью мультимодульной темы.
 */
class Database(private val context: Context,  private val fileManager: FileManager) {
}